function selectDataCoronal(width, height, depth,paso){
    console.log("coronal")
    var geometry = new THREE.PlaneGeometry(width, depth);
    var elementos = new Uint8Array( 3 *width*depth );
    // De izquierda a derecha

    var t = 0;
    var i = 0;
    var n = 0;

    while (i < width*height*depth){
        for(n ; n < width ; n ++) {
            elementos[t] = (generalDataVolume[i + n]);
            t++;
            n++;
        }
        i = i +(height*depth+n);
        n = 0;
    }

    var texture = new THREE.DataTexture(elementos, width, depth, THREE.LuminanceFormat);
    return textureF(geometry, paso, texture);
}

function selectDataCoronal(width, height, depth,paso){
    console.log("coronal")
    var geometry = new THREE.PlaneGeometry(width, depth);
    var elementos = new Uint8Array( 3 *width*depth );
    // De izquierda a derecha

    var t = 0;
    var i = width*50;
    var n = 0;
    var r = 0;

    while (r < depth){
        for(n=0; n< height; n++) {
            elementos[t] = (generalDataVolume[i] + 3024 + 6048);
            t++;
            n++;
            i++;

        }
        r++;
        i = i+height*width;
    }
    var texture = new THREE.DataTexture(elementos, width, depth, THREE.LuminanceFormat);
    return textureF(geometry, paso, texture);
}

function selectDataCoronal(width, height, depth,paso){
    console.log("coronal")
    var geometry = new THREE.PlaneGeometry(width, depth);
    var elementos = new Uint8Array( 3 *width*depth );

    var t = 0;
    var i = width*100;
    var n = 0;

    while (i < width*height*depth){
        for(n=0 ; n < width ; n ++) {
            elementos[t] = (generalDataVolume[i]+ 3024 + 6048);
            t++;
            n++;
            i++;
        }
        i = i +(height*height);
    }

    var texture = new THREE.DataTexture(elementos, height, depth, THREE.LuminanceFormat);
    return textureF(geometry, paso, texture);
}

function selectDataCoronal(width, height, depth,paso){
    console.log("coronal");
    var geometry = new THREE.PlaneGeometry(width, depth);
    var elementos = new Uint8Array( 3 *width*depth );
    // De izquierda a derecha

    var t = 0;
    var i = width*100;
    var n = 0;

    while (i < width*height*depth){
        for(n ; n < width ; n ++) {
            elementos[t] = (generalDataVolume[i + n]);
            t++;
            n++;
        }
        i = i +(height*depth+n);
        n = 0;
    }

    var texture = new THREE.DataTexture(elementos, width, depth, THREE.LuminanceFormat);
    return textureF(geometry, paso, texture);
}


//11:39  18/09/2018   bicho raro

function selectDataCoronal(width, height, depth, paso, num){
    var geometry = new THREE.PlaneGeometry(1, 1);
    var elementos = new Uint8Array( 3 * width * height );
    // De izquierda a derecha

    var t = 0;
    var i = width*num;

    while (i < width*height){
        for(var n=0 ; n < depth*height ; n +4) {
            elementos[t] = (generalDataVolume[i*num + n]/4);
            t++;
            n++;
        }
        i = i+ width*depth;
        //  i = i+(height*depth+n);
    }

    var texture = new THREE.DataTexture(elementos, width, depth, THREE.LuminanceFormat);
    return textureF(geometry, paso, texture);
}